package algorithm.BFSDFS;

public class IceCream {
    /**
     * DFS를 활용하는 알고리즘
     * 1. 특정한 지점의 주변 상,하,좌,우를 살펴본 뒤에 주변 지점 중에서 값이 '0'이면서 아직 방문하지 않은 지점이 있다면 해당 지점을 방문.
     * 2. 방문한 지점에서 다시 상,하,좌,우를 살펴보면서 방문을 진행하는 과정을 반복하면, 연결된 모든 지점을 방문할 수 있음.
     * 3. 모든 노드에 대하여 1~2번의 과정을 반복하며, 방문하지 않은 지점의 수를 카운트한다.
     *
     * 오답: DFS를 사용한다는 점을 잘 유추하였지만, 방문한 점들을 그룹지어 하나의 아이스크림으로 count 하는 점에서 어려움을 겪었음
     * 해결: DFS함수를 통하여 방문지점이 유효하다면 count를 증가시키고 연결된 점들은 모두 방문했음을 표시한다.
     *      DFS함수에서 방문지점이 유효하다면 위의 로직을 진행하지만, 유효하지 않다면 False를 반환하여 재귀를 멈춤으로써 count 하지 않음으로 해결 가능하였다.
    */
}
